<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayToggle</key>
						<false/>
						<key>MacroActionType</key>
						<string>MacroGroupToggle</string>
						<key>MacroGroupUID</key>
						<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
						<key>ToggleMode</key>
						<string>Activate</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
vo.output("Inspector On")</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493844446.23777997</real>
				<key>ModificationDate</key>
				<real>494113119.85347497</real>
				<key>Name</key>
				<string>Activate INspector</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>44</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>0969B316-89E7-4DE9-BC75-B9069420E97D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows()
msg = ""
for (w in windows) {
window = windows[w]
name = window.name()
if (name.indexOf("Mix: ")==0 | name.indexOf("Edit: ")==0) continue
msg += name+", "
 window.buttons[0].click()
}
if (msg=="") msg = "No windows to cloz."
else msg = "Closed "+msg
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479078801.99380499</real>
				<key>ModificationDate</key>
				<real>493937961.52389598</real>
				<key>Name</key>
				<string>Close All Floating Windows</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>13</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2304</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>F94D2326-4E17-4F5C-8A08-C06CF944F61F</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayToggle</key>
						<false/>
						<key>MacroActionType</key>
						<string>MacroGroupToggle</string>
						<key>MacroGroupUID</key>
						<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
						<key>ToggleMode</key>
						<string>Deactivate</string>
					</dict>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
vo.output("Inspector Off")</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493858646.54649901</real>
				<key>ModificationDate</key>
				<real>494113138.21453601</real>
				<key>Name</key>
				<string>Deactivate INspector</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>44</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>512</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>98C2C891-0636-44E5-8097-BA760983B0D5</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.tables.byName("Track List").rows
for (t in tracks) {
button = tracks[t].uiElements[0].buttons[0]
if (button.name().indexOf("Shown")==0) button.click()
}
msg = "Hide all tracks."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493686520.776407</real>
				<key>ModificationDate</key>
				<real>494233151.17457598</real>
				<key>Name</key>
				<string>Hide All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>120</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2048</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>F075684D-CBAC-4B01-8F7A-1508C8761B7D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.tables.byName("Track List").rows
for (t in tracks) {
button = tracks[t].uiElements[0].buttons[0]
if (tracks[t].uiElements[1].buttons[0].name().indexOf("Selected")==0 &amp; button.name().indexOf("Shown")==0) {
button.click()
}
}
msg = "Hide Selected Tracks."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493687207.84850001</real>
				<key>ModificationDate</key>
				<real>494233163.64025599</real>
				<key>Name</key>
				<string>Hide Selected Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>120</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>7E0B8512-0D57-49F4-A986-0A63C7ADAB6E</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
bounds = vo.voCursor.bounds()
x = bounds["x"]
y = bounds["y"]
width = bounds["width"]
height = bounds["height"]
x = x+width/2
y = y+height/2
kme.setvariable("x", {to:""+x})
kme.setvariable("y", {to:""+y})
vo.output("Option Click at "+x+", "+y)</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
					<dict>
						<key>Action</key>
						<string>MoveAndClick</string>
						<key>Button</key>
						<integer>0</integer>
						<key>ClickCount</key>
						<integer>1</integer>
						<key>DisplayMatches</key>
						<false/>
						<key>DragHorizontalPosition</key>
						<string>0</string>
						<key>DragVerticalPosition</key>
						<string>0</string>
						<key>Fuzz</key>
						<integer>15</integer>
						<key>HorizontalPositionExpression</key>
						<string>x</string>
						<key>MacroActionType</key>
						<string>MouseMoveAndClick</string>
						<key>Modifiers</key>
						<integer>2048</integer>
						<key>MouseDrag</key>
						<string>None</string>
						<key>Relative</key>
						<string>Absolute</string>
						<key>RelativeCorner</key>
						<string>TopLeft</string>
						<key>RestoreMouseLocation</key>
						<false/>
						<key>VerticalPositionExpression</key>
						<string>y</string>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>482163083.14183003</real>
				<key>ModificationDate</key>
				<real>494233421.87813598</real>
				<key>Name</key>
				<string>option click</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>7</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2048</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D20BCE88-3960-4E21-90DD-8995F3C2F145</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>kme = Application("Keyboard Maestro Engine")
vo = Application("VoiceOver")
bounds = vo.voCursor.bounds()
x = bounds["x"]
y = bounds["y"]
width = bounds["width"]
height = bounds["height"]
x = x+width/2
y = y+height/2
kme.setvariable("x", {to:""+x})
kme.setvariable("y", {to:""+y})
vo.output("Option shift Click at "+x+", "+y)</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
					<dict>
						<key>Action</key>
						<string>MoveAndClick</string>
						<key>Button</key>
						<integer>0</integer>
						<key>ClickCount</key>
						<integer>1</integer>
						<key>DisplayMatches</key>
						<false/>
						<key>DragHorizontalPosition</key>
						<string>0</string>
						<key>DragVerticalPosition</key>
						<string>0</string>
						<key>Fuzz</key>
						<integer>15</integer>
						<key>HorizontalPositionExpression</key>
						<string>x</string>
						<key>MacroActionType</key>
						<string>MouseMoveAndClick</string>
						<key>Modifiers</key>
						<integer>2560</integer>
						<key>MouseDrag</key>
						<string>None</string>
						<key>Relative</key>
						<string>Absolute</string>
						<key>RelativeCorner</key>
						<string>TopLeft</string>
						<key>RestoreMouseLocation</key>
						<false/>
						<key>VerticalPositionExpression</key>
						<string>y</string>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>482286422.39457399</real>
				<key>ModificationDate</key>
				<real>494236287.87243998</real>
				<key>Name</key>
				<string>Option Shift Click</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>7</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>A5FEA78B-73D3-4CB0-BA82-6537580F7C04</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "e"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button = track.popUpButtons.whose({title:{_contains:"Track name"}})[0]
value = button.name()
value = value.replace("Track name", "")
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Edit:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button = track.popUpButtons.whose({title:{_contains:"Playlist Selector"}})[0]
button.click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>494271722.28148401</real>
				<key>ModificationDate</key>
				<real>494271867.02305502</real>
				<key>Name</key>
				<string>Select Playlist Pop-Up Menu</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>35</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>512</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>366D9BB1-8DE8-4A77-BEF2-4C69C1878B03</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.tables.byName("Track List").rows
for (t in tracks) {
button = tracks[t].uiElements[0].buttons[0]
if (button.name().indexOf("Hidden")==0) button.click()
}
msg = "Show all tracks."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493686641.678491</real>
				<key>ModificationDate</key>
				<real>494233121.06842399</real>
				<key>Name</key>
				<string>Show All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>122</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2048</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>99B4330A-20BF-446B-93C9-8573FFB7DBA0</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.tables.byName("Track List").rows
for (t in tracks) {
button = tracks[t].uiElements[0].buttons[0]
show = button.name()
selected = tracks[t].uiElements[1].buttons[0].name()
if (selected.indexOf("Selected")==0 &amp; show.indexOf("Hidden")==0) {
button.click()
} else if (!selected.indexOf("Selected")==0 &amp; show.indexOf("Shown")==0) {
button.click()
}
}
msg = "Show Only Selected Tracks."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493687545.99967802</real>
				<key>ModificationDate</key>
				<real>494233135.24404699</real>
				<key>Name</key>
				<string>Show Only Selected Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>122</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>8A069D24-584C-4AE6-B35B-648DAF670679</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
midiFilter = {name:{_endsWith:" - MIDI Track"}}
tracks = mix.groups.whose({_not:[groupFilter, midiFilter]})
msg = ""
for (t in tracks) {
track = tracks[t]
meter = tracks[t].sliders["Peak"].attributes[2].value()
meter = meter.replace("minus ","-")
if (meter&gt;=0) msg += track.name()+", "
}
if (msg=="") msg = "No tracks are clipped"
else msg = "Clipped: "+msg
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493820126.83139598</real>
				<key>ModificationDate</key>
				<real>494233407.10199499</real>
				<key>Name</key>
				<string>Speak Clipped Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>8</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>FB201C2D-D357-4E12-8B9B-12EDF824C07B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "gk"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
inputSpecifier = ObjectSpecifier().buttons["TrackInput Monitor"].value
inputFilter = {_match:[inputSpecifier, "on"]}
audioFilter = {name:{_contains:" - Audio Track"}}
tracks = mix.groups.whose({_and:[audioFilter, inputFilter]})
msg = ""
for (t in tracks) {
msg += tracks[t].name()+", "
}
if (msg == "") msg = "No track has input monitor on"
else msg = "Input on: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups.whose({name:{_contains:"Audio Track"}})
msg = ""
for (t in tracks) {
button = tracks[t].buttons["TrackInput Monitor"]
if (button.value() == "on") button.click()
}
msg = "Turned Off Input Monitor for all tracks"
vo.output(msg)
}


kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound("/System/Library/Sounds/Tink.aiff")
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493846509.576334</real>
				<key>ModificationDate</key>
				<real>494235642.211909</real>
				<key>Name</key>
				<string>Speak Input Monitor-Enabled Tracks, Disable Input Monitor On All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>40</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>CF7CAA29-052E-4BEC-910F-757E788CCBC2</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>Window</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
inserts = track.groups["Inserts A-E"].buttons.whose({name:{_contains:"Assignment"}})
msg = ""
for (i in inserts) {
value = inserts[i].value()
if (value.indexOf("unassigned")==0) continue
value = value.replace("Insert Assignment ", "")
slot = inserts[i].name().replace("Insert Assignment ","")
msg += slot+": "+value+". "
}
if (msg=="") msg="Nothing is inserted."
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493856661.99573898</real>
				<key>ModificationDate</key>
				<real>494235811.704166</real>
				<key>Name</key>
				<string>Speak Inserts A-E</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>18</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>B4127D04-E78A-4DC5-9172-7103716E5A2B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>Window</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
inserts = track.groups["Inserts F-J"].buttons.whose({name:{_contains:"Assignment"}})
msg = ""
for (i in inserts) {
value = inserts[i].value()
if (value.indexOf("unassigned")==0) continue
value = value.replace("Insert Assignment ", "")
slot = inserts[i].name().replace("Insert Assignment ","")
msg += slot+": "+value+". "
}
if (msg=="") msg="Nothing is inserted."
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493857077.87562102</real>
				<key>ModificationDate</key>
				<real>494235821.43965399</real>
				<key>Name</key>
				<string>Speak Inserts F-J</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>19</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>8CE15288-B4F3-490F-928D-E4F13B2103AD</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
edit = windows.whose({name:{_beginsWith:"Edit:"}})[0]
msg = ""
current = edit.groups.byName("Counter Display Cluster").textFields.byName("Main Counter").value()
if (current.indexOf("|")&gt;-1) {
mbt = current.split(/\| /)
msg = msg+"bar "+mbt[0]+", beat"+mbt[1]+", tick"+mbt[2]
}
else if (current.indexOf(".")&gt;-1) {
ms = current.split(/:/)
if (ms[0]==1) ms[0] = ms[0]+" minute"
else ms[0] = ms[0]+" minutes"
second = ms[1].split(/\./)
if (second[0]==1) second[0] = second[0]+" second"
else second[0] = second[0]+" seconds"
if (second[1]==1) second[1] = second[1]+" millisecond"
else second[1] = second[1]+" milliseconds"
msg = msg+ms[0]+", "+second[0]
 + ", " + second[1]
} else msg = current
msg += ". main."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479078801.99380499</real>
				<key>ModificationDate</key>
				<real>494231799.65382898</real>
				<key>Name</key>
				<string>Speak main counter</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>118</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>749BC3D0-FDAD-4FB5-883D-807887087C79</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "gm"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
muteSpecifier = ObjectSpecifier().buttons["Mute"].value
muteFilter = {_match:[muteSpecifier,""]}
tracks = mix.groups.whose({_not:[groupFilter, masterFilter, muteFilter]})
msg = ""
for (t in tracks) {
track = tracks[t]
if (track.buttons["Mute"].value().indexOf("solo")&gt;-1) continue
msg += track.name()+", "
}
if (msg=="") msg = "No tracks are muted."
else msg = "Muted: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
tracks = mix.groups.whose({_not:[groupFilter, masterFilter]})
for (t in tracks) {
mute = tracks[t].buttons["Mute"]
if (mute.value().indexOf("solo")&gt;-1) continue
else if (mute.value().indexOf("on")&gt;-1) mute.click()
}
vo.output("unmuted all tracks.")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound("/System/Library/Sounds/Tink.aiff")
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479415768.360699</real>
				<key>ModificationDate</key>
				<real>494235600.61473298</real>
				<key>Name</key>
				<string>Speak Muted Tracks, Unmute All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>46</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>BE81CE62-6368-4549-AD3F-38BCEB5DED1D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "gr"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
auxFilter = {name:{_endsWith:" - Aux Track"}}
armSpecifier = ObjectSpecifier().buttons["Track Record Enable"].value
armFilter = {_match:[armSpecifier,""]}
tracks = mix.groups.whose({_not:[groupFilter, auxFilter, masterFilter, armFilter]})
msg = ""
for (t in tracks) {
track = tracks[t]
if (track.buttons["Track Record Enable"].value().indexOf("safe")==-1) {
msg += track.name()+", "
}
}
if (msg=="") msg = msg+"No tracks are armed."
else msg = "Armed: "+msg
vo.output (msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
auxFilter = {name:{_endsWith:" - Aux Track"}}
tracks = mix.groups.whose({_not:[groupFilter, auxFilter, masterFilter]})
for (t in tracks) {
arm = tracks[t].buttons["Track Record Enable"]
if (arm.value().indexOf("armed")&gt;-1) arm.click()
}
vo.output ("Disarmed all tracks.")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479415768.360699</real>
				<key>ModificationDate</key>
				<real>494235562.88788998</real>
				<key>Name</key>
				<string>Speak Record-Enabled Tracks, Disarm All Record Enabled Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>15</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>7B187870-DC44-44BE-89C0-3A799F0885E5</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "gt"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
select = ObjectSpecifier().uiElements[1].buttons[0].name
tracks = mix.tables.byName("Track List").rows.whose({_match:[select,{_contains:"Selected"}]})
msg = ""
for (t in tracks) {
name = tracks[t].uiElements.at(1).buttons[0].name()
name = name.replace("Selected", "")
msg += name+", "
}
if (msg=="") msg = "No tracks are currently selected."
else msg = "Selected: "+msg
vo.output (msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.tables.byName("Track List").rows
for (t in tracks) {
button = tracks[t].uiElements[1].buttons[0]
if (button.name().indexOf("Selected")&gt;-1) button.click()
}
vo.output ("Deselected All Tracks.")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
kme.playSound("/System/Library/Sounds/Tink.aiff")
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>482444177.87291098</real>
				<key>ModificationDate</key>
				<real>494235464.99313498</real>
				<key>Name</key>
				<string>Speak Selected Tracks, Deselect All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>17</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>1E86576F-C89E-4DA1-AC0F-24BBEC77228C</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
edit = windows.whose({name:{_beginsWith:"Edit:"}})[0]
msg = ""
end = edit.groups.byName("Counter Display Cluster").textFields.byName("Edit Selection End").value()
if (end.indexOf("|")&gt;-1) {
mbt = end.split(/\| /)
msg = msg+"bar "+mbt[0]+", beat"+mbt[1]+", tick"+mbt[2]
}
else if (end.indexOf(".")&gt;-1) {
ms = end.split(/:/)
if (ms[0]==1) ms[0] = ms[0]+" minute"
else ms[0] = ms[0]+"minutes"
second = ms[1].split(/\./)
if (second[0]==1) second[0] = second[0]+" second"
else second[0] = second[0]+" seconds"
if (second[1]==1) second[1] = second[1]+" millisecond"
else second[1] = second[1]+" milliseconds"
msg = msg+ms[0]+", "+second[0]
 + ", " + second[1]
} else msg = end
msg += ". end"
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479078801.99380499</real>
				<key>ModificationDate</key>
				<real>494231821.66014802</real>
				<key>Name</key>
				<string>Speak Selection End</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>120</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>BA15DD35-8B44-4294-BBB7-C8E49835ED91</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
edit = windows.whose({name:{_beginsWith:"Edit:"}})[0]
msg = ""
length = edit.groups.byName("Counter Display Cluster").textFields.byName("Edit Selection Length").value()
if (length.indexOf("|")&gt;-1) {
mbt = length.split(/\| /)
if (mbt[0]==1) mbt[0] = mbt[0]+" bar"
else mbt[0] = mbt[0]+"bars"
if (mbt[1]==1) mbt[1] = mbt[1]+" beat"
else mbt[1] = mbt[1]+"beats"
if (mbt[2]==1) mbt[2] = mbt[2]+" tick"
else mbt[2] = mbt[2]+"ticks"
msg = msg+mbt[0]+mbt[1]+mbt[2]
} else if (length.indexOf(".")&gt;-1) {
ms = length.split(/:/)
if (ms[0]==1) ms[0] = ms[0]+" minute"
else ms[0] = ms[0]+"minutes"
second = ms[1].split(/\./)
if (second[0]==1) second[0] = second[0]+" second"
else second[0] = second[0]+" seconds"
if (second[1]==1) second[1] = second[1]+" millisecond"
else second[1] = second[1]+" milliseconds"
msg = msg+ms[0]+", "+second[0]
 + ", " + second[1]
} else msg = length
msg += ". length."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479078801.99380499</real>
				<key>ModificationDate</key>
				<real>494231834.87540501</real>
				<key>Name</key>
				<string>Speak Selection Length</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>99</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>6D81DB50-0CF7-4A66-89BD-5BBE50F6CF2A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
edit = windows.whose({name:{_beginsWith:"Edit:"}})[0]
msg = ""
start = edit.groups.byName("Counter Display Cluster").textFields.byName("Edit Selection Start").value()
if (start.indexOf("|")&gt;-1) {
mbt = start.split(/\| /)
msg = msg+"bar "+mbt[0]+", beat"+mbt[1]+", tick"+mbt[2]
} else if (start.indexOf(".")&gt;-1) {
ms = start.split(/:/)
if (ms[0]==1) ms[0] = ms[0]+" minute"
else ms[0] = ms[0]+"minutes"
second = ms[1].split(/\./)
if (second[0]==1) second[0] = second[0]+" second"
else second[0] = second[0]+" seconds"
if (second[1]==1) second[1] = second[1]+" millisecond"
else second[1] = second[1]+" milliseconds"
msg = msg+ms[0]+", "+second[0]
 + ", " + second[1]
} else msg = start
msg += ". start."
vo.output (msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479078801.99380499</real>
				<key>ModificationDate</key>
				<real>494231854.43636101</real>
				<key>Name</key>
				<string>speak selection start</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>122</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>256</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>EE98B23A-8EEC-4DB2-A4EE-D7D2406DCA8A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
sends = track.groups["Sends A-E"].buttons.whose({name:{_contains:"Assignment"}})
msg = ""
for (s in sends) {
value = sends[s].value()
if (value.indexOf("unassigned")==0) continue
value = value.replace("Send Assignment ", "")
slot = sends[s].name().replace("Send Assignment ","")
msg += slot+": "+value+". "
}
if (msg=="") msg="Nothing is inserted."
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493857184.87559599</real>
				<key>ModificationDate</key>
				<real>494235795.95423102</real>
				<key>Name</key>
				<string>Speak Sends A-E</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>20</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>0649E57A-EE87-4D64-98AA-9CF2EF8723A7</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
sends = track.groups["Sends F-J"].buttons.whose({name:{_contains:"Assignment"}})
msg = ""
for (s in sends) {
value = sends[s].value()
if (value.indexOf("unassigned")==0) continue
value = value.replace("Send Assignment ", "")
slot = sends[s].name().replace("Send Assignment ","")
msg += slot+": "+value+". "
}
if (msg=="") msg="Nothing is inserted."
vo.output(msg)
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493857413.65157801</real>
				<key>ModificationDate</key>
				<real>494235783.0837</real>
				<key>Name</key>
				<string>Speak Sends F-J</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>21</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>90F721F8-16BF-43EF-927F-B23334E67D00</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>479078801.99380499</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "v"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
soloSpecifier = ObjectSpecifier().buttons["Solo"].value
soloFilter = {_match:[soloSpecifier,""]}
tracks = mix.groups.whose({_not:[groupFilter, masterFilter, soloFilter]})
msg = ""
for (t in tracks) {
track = tracks[t]
if (track.buttons["solo"].value().indexOf("safe")==-1) {
msg += track.name()+", "
}
}
if (msg=="") msg = msg+"No tracks are soloed."
else msg = "Soloed: "+msg
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
groupFilter = {name:{_beginsWith:"Group List"}}
masterFilter = {name:{_endsWith:" - Master Track"}}
tracks = mix.groups.whose({_not:[groupFilter, masterFilter]})
for (t in tracks) {
solo = tracks[t].buttons["Solo"]
if (solo.value().indexOf("Selected")&gt;-1) solo.click()
}
vo.output("unsoloed all tracks.")
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>479415768.360699</real>
				<key>ModificationDate</key>
				<real>494235485.06437302</real>
				<key>Name</key>
				<string>Speak Soloed Tracks, Unsolo All Tracks</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>1</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>2560</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>2727205D-51F2-49D2-B1B0-66BA8D4D6F06</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>A33CD6B2-F33B-4026-AAE9-207E16932A6F</string>
		<key>UID</key>
		<string>B7E0E6A9-B857-4443-876A-DF90D29C080E</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "e"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button = track.popUpButtons.whose({title:{_contains:"Track name"}})[0]
value = button.name()
value = value.replace("Track name", "")
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button = track.popUpButtons.whose({title:{_contains:"Track name"}})[0]
button.click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493851817.94585598</real>
				<key>ModificationDate</key>
				<real>494236192.42275202</real>
				<key>Name</key>
				<string>Speak Track Name, Select Track Pop-Up Menu</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>17</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>ADBCEFDF-6ADF-47B1-8926-F0A37E2B81C1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "g"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
gainReduction = ""+track.buttons["Gain Reduction"].value()
vo.output (gainReduction)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
gainReduction = track.buttons.byName("Gain Reduction").click()
delay(0.1)
gainReduction = ""+track.buttons["Gain Reduction"].value()
vo.output (gainReduction)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}


</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>494113431.914226</real>
				<key>ModificationDate</key>
				<real>494235857.17195201</real>
				<key>Name</key>
				<string>Speak/Reset Gain Reduction Meter</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>5</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D6EBC0B1-C40A-4270-8944-21E7830E9B17</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "l"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
roleDescription = ObjectSpecifier().roleDescription
button = track.buttons.whose({_match:[roleDescription,"Level Meter"]})
meter = ""+button.value()
if (meter == "") vo.output("No Signal")
else vo.output (meter)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
roleDescription = ObjectSpecifier().roleDescription
button = track.buttons.whose({_match:[roleDescription,"Level Meter"]})[0]
button.click()
delay(0.1)
meter = ""+button.value()
if (meter == "") vo.output("No Signal")
else vo.output (meter)
}


kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493739047.38486099</real>
				<key>ModificationDate</key>
				<real>494235998.04677999</real>
				<key>Name</key>
				<string>Speak/Reset Level Meter</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>37</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>252B218D-D108-456B-9DA4-683D3858BC80</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "n"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
pans = track.sliders.whose({name:{_contains:"Pan Knob"}})
msg = ""
for (p in pans) {
value = ""+pans[p].attributes["AXValueDescription"].value()
if (value=="") value = "No Pan"
msg += value+". "
}
vo.output(msg)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
pans = track.sliders.whose({name:{_contains:"Pan Knob"}})
msg = ""
for (p in pans) {
pans[p].click()
delay(0.1)
value = ""+pans[p].attributes["AXValueDescription"].value()
msg += value+". "
}
vo.output(msg)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493863331.97943401</real>
				<key>ModificationDate</key>
				<real>494236053.03094298</real>
				<key>Name</key>
				<string>Speak/Reset Pan</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>45</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>B7196BF6-FE59-4DF8-AE2F-7603E8569D3B</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "p"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
slider = track.sliders["Peak"]
meter = slider.attributes[2].value()
vo.output (meter)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
tracks = mix.groups
track = tracks.byName(vo.voCursor.textUnderCursor())
slider = track.sliders.byName("Peak")
slider.click()
delay(0.1)
meter = slider.attributes[2].value()
vo.output (meter)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>492698480.42757702</real>
				<key>ModificationDate</key>
				<real>494236083.15729702</real>
				<key>Name</key>
				<string>Speak/Reset Peak Meter</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>35</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>1C6D9619-0269-4AB1-A64F-799FDEA688D5</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "v"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.sliders.byName("Volume").attributes["AXValueDescription"].value()
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button  = track.sliders.byName("Volume")
button.click()
delay(0.1)
value = ""+button.attributes["AXValueDescription"].value()
vo.output(value)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493842382.64579898</real>
				<key>ModificationDate</key>
				<real>494235895.88897997</real>
				<key>Name</key>
				<string>Speak/Reset Volume Fader</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>9</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>76B6802A-B448-4CD7-BBEF-AD8A550315FD</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "a"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.popUpButtons.whose({name:{_contains:"Automation Mode Selector"}})[0].help()
value = value.replace("Automation Mode selector", "")
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.popUpButtons.whose({name:{_contains:"Automation Mode selector"}})[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493843837.55308402</real>
				<key>ModificationDate</key>
				<real>494235933.97582799</real>
				<key>Name</key>
				<string>Speak/Select Automation Mode</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>0</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>7E24E71D-E197-4D9D-B501-673C0119CF44</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "i"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.popUpButtons.whose({name:{_contains:"Input Path"}}).name()
value = value.replace("Audio Input Path selector", "")
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.popUpButtons.whose({name:{_contains:"Input Path"}})[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493842481.33545101</real>
				<key>ModificationDate</key>
				<real>494235966.01757401</real>
				<key>Name</key>
				<string>Speak/Select Input</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>34</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>7A7404B4-51E6-4C3F-9ED0-36F38FF9277D</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "o"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.popUpButtons.whose({name:{_contains:"Output Path"}}).name()
value = value.replace("Audio Output Path selector", "")
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.popUpButtons.whose({name:{_contains:"Output Path"}})[0].click()
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493843431.58760601</real>
				<key>ModificationDate</key>
				<real>494236071.01945198</real>
				<key>Name</key>
				<string>Speak/Select Output</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>31</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>AC68B729-FACE-40B3-B44E-75D060D4E6F1</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "k"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.buttons.byName("TrackInput Monitor").value()
if (value=="") value = "Off"
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.buttons.byName("TrackInput Monitor").click()
delay(0.1)
value = track.buttons.byName("TrackInput Monitor").value()
if (value=="") value = "Off"
vo.output(value)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493845266.359146</real>
				<key>ModificationDate</key>
				<real>494235981.62321901</real>
				<key>Name</key>
				<string>Speak/Toggle Input Monitor</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>40</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>6B397B91-A570-47FD-91B7-807C30511E69</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "m"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.buttons.byName("Mute").value()
if (value=="") value = "Off"
else if (value=="on state") value = "On"
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.buttons.byName("Mute").click()
delay(0.1)
value = track.buttons.byName("Mute").value()
if (value=="") value = "Off"
else if (value=="on state") value = "On"
vo.output(value)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493840383.85708898</real>
				<key>ModificationDate</key>
				<real>494236037.85584098</real>
				<key>Name</key>
				<string>Speak/Toggle Mute</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>46</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>D614E7B9-1A9B-4A7A-9100-D57C38D7B45A</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "r"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.buttons.byName("Track Record Enable").value()
if (value=="") value = "Not Armed"
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
track.buttons.byName("Track Record Enable").click()
value = track.buttons.byName("Track Record Enable").value()
if (value=="") value = "Not Armed"
vo.output(value)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}

</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493841347.92451298</real>
				<key>ModificationDate</key>
				<real>494236100.94893199</real>
				<key>Name</key>
				<string>Speak/Toggle Record State</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>15</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>800A0740-6F7A-46F0-BDCF-B2481B01FB02</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
	<dict>
		<key>Activate</key>
		<string>Normal</string>
		<key>CreationDate</key>
		<real>493839659.76668698</real>
		<key>Macros</key>
		<array>
			<dict>
				<key>Actions</key>
				<array>
					<dict>
						<key>DisplayKind</key>
						<string>None</string>
						<key>IncludeStdErr</key>
						<true/>
						<key>MacroActionType</key>
						<string>ExecuteJavaScriptForAutomation</string>
						<key>Path</key>
						<string></string>
						<key>Text</key>
						<string>currentCommand = "s"

function single() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
value = ""+track.buttons.byName("Solo").value()
if (value=="Selected") value = "On"
else if (value == "") value = "Off"
vo.output(value)
}

function double() {
vo = Application("VoiceOver")
sys = Application("System Events")
pt = sys.applicationProcesses.byName("Pro Tools")
windows = pt.windows
mix = windows.whose({name:{_beginsWith:"Mix:"}})[0]
track = mix.groups.byName(vo.voCursor.textUnderCursor())
button = track.buttons.byName("Solo")
button.click()
delay(0.1)
value = ""+button.value()
if (value=="Selected") value = "On"
else if (value == "") value = "Off"
vo.output(value)
}

kme = Application("Keyboard Maestro Engine")
command = kme.getvariable("command").split(".")
start = new Date().getTime()
kme.setvariable("command", {to:currentCommand+"."+start})
if (currentCommand == command[0] &amp; start-command[1]&lt;200) {
double()
kme.playSound("/System/Library/Sounds/Tink.aiff")
} else  {
runSingle = true
while (new Date().getTime()-start&lt;200) {
command = kme.getvariable("command").split(".")
if (currentCommand == command[0] &amp; command[1]&gt;start) {
runSingle=false
break;
}
}
if (runSingle) single()
}
</string>
						<key>TimeOutAbortsMacro</key>
						<true/>
						<key>TrimResults</key>
						<true/>
						<key>TrimResultsNew</key>
						<true/>
						<key>UseText</key>
						<true/>
					</dict>
				</array>
				<key>CreationDate</key>
				<real>493840505.88860101</real>
				<key>ModificationDate</key>
				<real>494236115.13951898</real>
				<key>Name</key>
				<string>Speak/Toggle Solo</string>
				<key>Triggers</key>
				<array>
					<dict>
						<key>FireType</key>
						<string>Pressed</string>
						<key>KeyCode</key>
						<integer>1</integer>
						<key>MacroTriggerType</key>
						<string>HotKey</string>
						<key>Modifiers</key>
						<integer>0</integer>
					</dict>
				</array>
				<key>UID</key>
				<string>57957B28-6D66-4BEF-85B9-48406E95FB18</string>
			</dict>
		</array>
		<key>Name</key>
		<string>Pro Tools Accessibility Inspector</string>
		<key>Targeting</key>
		<dict>
			<key>Targeting</key>
			<string>Included</string>
			<key>TargetingApps</key>
			<array>
				<dict>
					<key>BundleIdentifier</key>
					<string>com.avid.ProTools</string>
					<key>Name</key>
					<string>Pro Tools</string>
					<key>NewFile</key>
					<string>/Applications/Pro Tools.app</string>
				</dict>
			</array>
		</dict>
		<key>ToggleMacroUID</key>
		<string>D80BD2FE-C4A0-4545-A7ED-3F7B17CF9B42</string>
		<key>UID</key>
		<string>A873DB58-32B1-4730-B0D4-9C89056CB5F7</string>
	</dict>
</array>
</plist>
